AWSTemplateFormatVersion "2010-09-09"
Parameters do
  _include 'include/params_keypair.rb'
  _include 'include/params_instancetype_hvm.rb'
end
Mappings do
  _include 'include/map_az_all.rb'
  _include 'include/map_ami_hvm.rb'
  _include 'include/vpc/map_subnet2.rb'
end
Resources do
  _include 'include/vpc/resource.rb'
  LoadBalancer do
    Type "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties do
      Subnets [
        _{
          Ref "PublicSubnet"
        }
      ]
      HealthCheck do
        HealthyThreshold 2
        Interval 30
        Target "TCP:80"
        Timeout 10
        UnhealthyThreshold 2
      end
      SecurityGroups [
        _{
          Ref "sgAMIMOTO11AutogenByAWSMP"
        }
      ]
      Instances [
        _{
          Ref "AmimotoSingle"
        }
      ]
      Listeners [
        _{
          InstancePort 80
          LoadBalancerPort 80
          Protocol "HTTP"
          InstanceProtocol "HTTP"
        }
      ]
    end
  end
  AmimotoSingle do
    Type "AWS::EC2::Instance"
    Properties do
      DisableApiTermination "FALSE"
      ImageId do
        Fn__FindInMap [
          "MPAmimotov4",
          _{
            Ref "AWS::Region"
          },
          "AMI"
        ]
      end
      InstanceType do
        Ref "InstanceType"
      end
      KeyName do
        Ref "KeyName"
      end
      Monitoring "false"
      Tags [
        _{
          Key "Name"
          Value "mp-amimoto"
        }
      ]
      NetworkInterfaces [
        _{
          AssociatePublicIpAddress "true"
          DeviceIndex 0
          DeleteOnTermination "true"
          GroupSet [
            _{
              Ref "sgAMIMOTO11AutogenByAWSMP"
            }
          ]
          SubnetId do
            Ref "PublicSubnet"
          end
        }
      ]
    end
  end
  sgAMIMOTO11AutogenByAWSMP do
    Type "AWS::EC2::SecurityGroup"
    Properties do
      GroupDescription "This security group was generated by AWS Marketplace and is based on recommended settings for AMIMOTO version 11 provided by DigitalCube Co Ltd"
      VpcId do
        Ref "VPC"
      end
      SecurityGroupIngress [
        _{
          IpProtocol "tcp"
          FromPort 22
          ToPort 22
          CidrIp "0.0.0.0/0"
        },
        _{
          IpProtocol "tcp"
          FromPort 80
          ToPort 80
          CidrIp "0.0.0.0/0"
        }
      ]
    end
  end
end
Description ""
Outputs do
  WebSiteURL do
    Description "WordPress Site URL (Please wait a few minutes for the upgrade of WordPress to access for the first time.)"
    Value do
      Fn__Join [
        "",
        [
          "http://",
          _{
            Fn__GetAtt "LoadBalancer", "DNSName"
          }
        ]
      ]
    end
  end
end
